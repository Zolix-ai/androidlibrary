# Java Gradle CircleCI 2.0 configuration file
# See: https://circleci.com/docs/2.0/language-java/
version: 2.1

orbs:
  android: circleci/android@2.2.0


# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-androidlibrary:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      # specify the version you desire here
      - image: cimg/android:2023.02

    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Download depenencies
          command: ./gradlew androidDependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # build project
      - run: 
          name: build project
          command: ./gradlew clean assemble

      # run tests
      - run:
          name: run tests
          command: ./gradlew test

      # - run:
      #     name: deploy Maven artifacts to Github Packages
      #     command: mvn clean deploy



  #Run test Job        
  run-test-on-emulator:

 #Runs UI tests with the default start and run test command from the orb
      # executor:
      #   name: android/android-machine
      #   resource-class: large
      #   tag: 2021.10.1
      # steps:
      #   - checkout
      #   - android/start-emulator-and-run-tests:
      #       system-image: system-images;android-29;default;x86

#Runnning the UI test by manually creating an AVD and running
      executor:
        name: android/android-docker
        resource-class: large
        tag: 2023.02.1
   

      steps:
        - checkout
        #Creates an AVD called avd
        - android/create-avd:
            avd-name: avd
            system-image : system-images;android-33;google_apis;x86_64
            install: true

        - android/start-emulator:
            avd-name: avd
            no-window: true
            restore-gradle-cache-prefix: v1a
            wait-for-emulator: true

      # Runs "./gradlew connectedDebugAndroidTest" by default.
      # Specify the "test-command" parameter to customize the command run. 
       # - android/start-emulator-and-run-tests
       # - android/run-tests
        - run: sdkmanger --list
        - run:
            name: run tests manually
            command: ./gradlew test
        - android/save-gradle-cache:
            cache-prefix: v1a



workflows:
  build-androidibrary-and-test-workflow:
    jobs:
    #  - build-androidlibrary
      - run-test-on-emulator
      # - android/run-ui-tests:
      #     system-image: system-images;android-29;default;x86