# Java Gradle CircleCI 2.0 configuration file
# See: https://circleci.com/docs/2.0/language-java/
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-and-test-androidlibrary:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    
    machine:
      image: android:2023.02
    resource_class: large  
      

    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      # Create Android Virtual Device
      - run:
          name: create AVD
          command: |
            SYSTEM_IMAGES = "system-images;android-31;google_apis;x86"
            sdkmanager "$SYSTEM_IMAGES"
            echo "no" | avdmanager --verbose create avd -n test -k "$SYSTEM_IMAGES"
      - run:
          name: Launch the emulator
          command: |
            emulator -avd test -delay-adb -verbose -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim
          background: true
          # runs the emulator in the background
      - run:
          name: Generate cache key
          command: |
            find . -name 'build.gradle' | sort | xargs cat |
            shasum | awk '{print $1}' > /tmp/gradle_cache_seed

      # Download and cache dependencies
      - restore_cache:
          key: gradle-v1-{{ arch }}-{{ checksum "/tmp/gradle_cache_seed" }}

      - run:
          name: Download depenencies
          command: ./gradlew androidDependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # Run intergration tests
      - run:
          name: Run assembleDebugAndroidTest task
          command: ./gradlew assembleDebugAndroidTest

      # Wait for emulator to start
      - run:
          name: Wait for emulator
          command: circle-android wait-for-boot      

      # Disable emulator animations
      - run:
          name: Disable animations on emulator
          command: |
            adb shell settings put global window_animation_scale 0.0
            adb shell settings put global transition_animation_scale 0.0
            adb shell settings put global animator_duration_scale 0.0
          
      # Run intergration tests
      - run:
          name: Run UI Tests
          command: |
            MAX_TRIES=2
              run_with_retry() {
               n=1
               until [ $n -gt $MAX_TRIES ]
               do
                  echo "Starting test attempt $n"
                  ./gradlew connectedDebugAndroidTest && break
                  n=$[$n+1]
                  sleep 5
               done
               if [ $n -gt $MAX_TRIES ]; then
                 echo "Max tries reached ($MAX_TRIES)"
                 exit 1
               fi
            }
            run_with_retry

      - save_cache:
          key: gradle-v1-{{ arch }}-{{ checksum "/tmp/gradle_cache_seed" }}
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper

      # build project
      - run: 
          name: build project
          command: ./gradlew clean assemble

      # # run tests
      # - run:
      #     name: run tests
      #     command: ./gradlew test

      # - run:
      #     name: deploy Maven artifacts to Github Packages
      #     command: mvn clean deploy

workflows:
  build-androidibrary-and-test-workflow:
    jobs:
     - build-and-test-androidlibrary
